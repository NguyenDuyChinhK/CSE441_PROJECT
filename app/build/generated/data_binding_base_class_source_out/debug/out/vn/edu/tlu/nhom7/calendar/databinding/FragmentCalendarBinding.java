// Generated by view binder compiler. Do not edit!
package vn.edu.tlu.nhom7.calendar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.prolificinteractive.materialcalendarview.MaterialCalendarView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.tlu.nhom7.calendar.R;

public final class FragmentCalendarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout activityMain;

  @NonNull
  public final MaterialCalendarView calendarView;

  @NonNull
  public final RecyclerView listEvent;

  @NonNull
  public final TextView tvAm;

  @NonNull
  public final TextView tvDuong;

  @NonNull
  public final TextView tvSpace1;

  @NonNull
  public final TextView tvSpace2;

  private FragmentCalendarBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout activityMain, @NonNull MaterialCalendarView calendarView,
      @NonNull RecyclerView listEvent, @NonNull TextView tvAm, @NonNull TextView tvDuong,
      @NonNull TextView tvSpace1, @NonNull TextView tvSpace2) {
    this.rootView = rootView;
    this.activityMain = activityMain;
    this.calendarView = calendarView;
    this.listEvent = listEvent;
    this.tvAm = tvAm;
    this.tvDuong = tvDuong;
    this.tvSpace1 = tvSpace1;
    this.tvSpace2 = tvSpace2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout activityMain = (LinearLayout) rootView;

      id = R.id.calendarView;
      MaterialCalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.list_event;
      RecyclerView listEvent = ViewBindings.findChildViewById(rootView, id);
      if (listEvent == null) {
        break missingId;
      }

      id = R.id.tv_am;
      TextView tvAm = ViewBindings.findChildViewById(rootView, id);
      if (tvAm == null) {
        break missingId;
      }

      id = R.id.tv_duong;
      TextView tvDuong = ViewBindings.findChildViewById(rootView, id);
      if (tvDuong == null) {
        break missingId;
      }

      id = R.id.tv_space1;
      TextView tvSpace1 = ViewBindings.findChildViewById(rootView, id);
      if (tvSpace1 == null) {
        break missingId;
      }

      id = R.id.tv_space2;
      TextView tvSpace2 = ViewBindings.findChildViewById(rootView, id);
      if (tvSpace2 == null) {
        break missingId;
      }

      return new FragmentCalendarBinding((LinearLayout) rootView, activityMain, calendarView,
          listEvent, tvAm, tvDuong, tvSpace1, tvSpace2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
